#include <stdint.h>
#include <stdbool.h>
#include "inc/hw_memmap.h"
#include "inc/hw_types.h"
#include "inc/hw_ints.h"
#include "driverlib/adc.h"
#include "driverlib/sysctl.h"
#include "driverlib/systick.h"
#include "driverlib/debug.h"
#include "utils/ustdlib.h"
#include "stdlib.h"
#include "OrbitOLED/OrbitOLEDInterface.h"
#include "buttons4.h"
#include "circBufT.h"
#include "display.h"
#include "altitude.h"
#include "yaw.h"
#include "kernel.h"
#include "control.h"
#include "buttonInput.h"
#include "uart.h"

int8_t upPushes = 0, downPushes = 0, rightPushes = 0, leftPushes = 0, selectPushes = 0;

void checkForAltitudeInput ()
{
    uint8_t butState = checkButton (UP);
    if (butState == PUSHED && desiredAltitude + 10 <= 100)
    {
        desiredAltitude -= 10;
    }

    butState = checkButton (DOWN);
    if (butState == PUSHED && desiredAltitude - 10 >= 0)
    {
        desiredAltitude -= 10;
    }
}

void checkForYawInput ()
{
    uint8_t butState = checkButton (RIGHT);
    if (butState == PUSHED)
    {
        if (desiredYaw + 15 <= 360)
        {
            desiredYaw += 15;
        }
        else
        {
            desiredYaw = 15;
        }
    // Do nothing if state is NO_CHANGE
    }

    butState = checkButton (LEFT);
    switch (butState)
    {
    case PUSHED:
        //displayButtonState ("LEFT ", "PUSH", ++leftPushes, 3);
        if (desiredYaw - 15 >= 0)
        {
            desiredYaw -= 15;
        }
        else
        {
            desiredYaw = 345;
        }
        break;
    case RELEASED:
        //displayButtonState ("LEFT ", "RELS", leftPushes, 3);
        break;
    // Do nothing if state is NO_CHANGE
    }
}

int checkForModeInput (void)
{
    updateButtons();
    uint8_t butState = checkButton(SELECT);
    if (selectPushes == 0)
    {
        butState = NO_CHANGE;
        selectPushes++;
    }
    return butState;
}
